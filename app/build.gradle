ext {
    var = '0.4.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    buildToolsVersion "29.0.2"
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.danjorn.chatwithlocation"
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //standard stuff
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //Dagger
    implementation 'com.google.dagger:dagger:2.25.4'
    kapt 'com.google.dagger:dagger-compiler:2.25.4'
    //tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    testImplementation 'org.mockito:mockito-core:2.23.4'
    //kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0' //Do I need entire ktx or only viewModelScope?
    //lifecycle extensions
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
    //multi dex
    implementation 'androidx.multidex:multidex:2.0.1'
    //cool libraries
    implementation 'com.github.quickpermissions:quickpermissions-kotlin:0.4.0'
    implementation 'com.yayandroid:LocationManager:2.0.4'
    implementation 'com.mikhaellopez:circularimageview:4.0.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'dev.ahamed.mva2:adapter:2.0.0-beta01'
    //Firebase services
    implementation 'com.firebase:geofire-android:3.0.0'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    implementation 'com.facebook.android:facebook-android-sdk:4.42.0'
    implementation 'com.google.firebase:firebase-auth:18.0.0'
    implementation 'com.google.firebase:firebase-storage:18.0.0'
    implementation 'com.google.firebase:firebase-database:18.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-analytics:17.0.1'
}
apply plugin: 'io.fabric'

apply plugin: 'com.google.gms.google-services'
